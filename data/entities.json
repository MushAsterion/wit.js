[
    { "name": "wit/age_of_person", "desc": "Captures the age of a person, pet or object, such as 22 years old. The entity returns an integer, representing the year. It does not support smaller granularity (months, weeks etc.)." },
    { "name": "wit/agenda_entry", "desc": "Extrapolates typical agenda items from free text." },
    { "name": "wit/amount_of_money", "desc": "Measures an amount of money such as $20, 30 euros. Supported by Duckling 🦆." },
    { "name": "wit/contact", "desc": "Captures free text that's either the name or a clear reference to a person, such as Paul, Paul Smith, my husband, the dentist." },
    { "name": "wit/creative_work", "desc": "Captures and resolves creative work including movies, TV shows, music albums and tracks." },
    { "name": "wit/datetime", "desc": "Captures and resolves date and time, like tomorrow at 6pm. Supported by Duckling 🦆." },
    { "name": "wit/distance", "desc": "Captures a distance in miles or kilometers such as 5km, 5 miles and 12m. Supported by Duckling 🦆." },
    { "name": "wit/duration", "desc": "Captures a duration such as 30min, 2 hours or 15sec and normalizes the value in seconds. Supported by Duckling 🦆." },
    { "name": "wit/email", "desc": "Captures an email but do not try to check the validity of the email. For example, help@wit.ai. Supported by Duckling 🦆." },
    { "name": "wit/local_search_query", "desc": "Captures free text that's a query for a local search (e.g. local places, shops or businesses), like flowers shop or Philz coffee." },
    { "name": "wit/location", "desc": "Captures free text that's a typical location, place or address like 350 Cambridge Ave Palo Alto, 925 Alma Street, LAX, and Sausalito, CA." },
    { "name": "wit/math_expression", "desc": "Captures free text that's a mathematical, computable expression such as 2+2." },
    { "name": "wit/message_body", "desc": "Captures free text that's the body of a message, such as email or SMS." },
    { "name": "wit/notable_person", "desc": "Captures and resolves names of notable people and public figures, such as Grace Hopper and Mark Zuckerberg." },
    { "name": "wit/number", "desc": "Extrapolates a number from free text, such as six,twelve, 16, 1.10 and 23K. Supported by Duckling 🦆." },
    { "name": "wit/ordinal", "desc": "Captures the measure of an ordinal number, such as first, second, third... or 1st, 2nd, ..., 7th, etc. Supported by Duckling 🦆." },
    { "name": "wit/phone_number", "desc": "Captures phone numbers, but does not try to check the validity of the number. Supported by Duckling 🦆." },
    { "name": "wit/phrase_to_translate", "desc": "Captures free text that is a phrase the user wants to translate." },
    { "name": "wit/quantity", "desc": "Captures the quantity of something; such as ingredients in recipes, or quantities of food for health tracking apps. Returns a numerical value, a unit, and a product (each field is optional). Supported by Duckling 🦆." },
    { "name": "wit/reminder", "desc": "Captures free text that's a typical reminder, such as buy some milk." },
    { "name": "wit/search_query", "desc": "Captures free text that's a generic search engine query. If you can, use more specialized queries instead (wit/local_search_query, wit/wikipedia_search_query, wit/wolfram_search_query)." },
    { "name": "wit/temperature", "desc": "Captures the temperature in units of celsius or fahrenheit degrees. Supported by Duckling 🦆." },
    { "name": "wit/url", "desc": "Captures an URL, but does not try to check the validity of the URL. For example:  http: //www.foo.com, www.foo.com: 8080/path, https: //myserver?foo=bar, cnn.com/info, bla.com/path/path?ext=%23&foo=bla, or localhost. Supported by Duckling 🦆." },
    { "name": "wit/volume", "desc": "Captures measures of volume like 250 ml, 3 gal. Supported by Duckling 🦆." },
    { "name": "wit/wikipedia_search_query", "desc": "Captures free text that's a typical query for Wikipedia, such as Frederick Douglass." },
    { "name": "wit/wolfram_search_query", "desc": "Captures free text that's a typical query for Wolfram Alpha, such as distance between the Earth and the Moon." }
]